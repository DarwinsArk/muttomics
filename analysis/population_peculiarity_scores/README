Running permutations in seven steps

1. Using files available in the paper data release, make input files for running permutations. It will make input files for the three datasets shown in the paper:
(1) cand = candidate purebred dogs, grouped by breed, with at least 25 dogs/set required to run permutations (permutations will sample 25 dogs)
(2) conf = confirmed purebred dogs, grouped by breed, with at least 100 dogs/set required to run permutations (permutations will sample 50 dogs). 
(3) age = for any survey response with an age, group by year of age, with at least 200 dogs/set required to run permutations (permutations will sample 100 dogs)

script: step1.make_dog_groups.R

2. Run one permutation iteration. This script does one real sampling of the specified dataset, and 100 random samplings, and calculates the mean score of each set. We used a wrapper shell script to run this 5000 times for each dataset

script: step2.run_perms_for_Ndogs_it.R [dataset] [permutation number]
example: Rscript --vanilla step2.run_perms_for_Ndogs_it.R cand 1

3. Count how often the random permutations score higher than the real permutations. Run on each file produced by step 2 (suffix is ".stat.csv")

script: step3.step3.compare_means_and_count.R [infile w *.stat.csv suffix]
example: Rscript --vanilla step3.compare_means_and_count.R  runs/cand/cand.it1.stat.csv

4. Concatenate all of the permutation counts together into a single file for each dataset (cand, conf and age)

script: step4.concatenate_iterations.R
example: Rscript --vanilla step5.concatenate_iterations.R cand

5. Calculate p values for each question/factor and set 
script: step5.get_empirical_pvals.R

6. Format the results for data sharing 
script: step6.make_data_release_file.R
